package app.pieces;

import app.chess.Game;

public class Bishop {

    public final static long[] BishopDiagonalMaskMoves_1 = {
            0x8040201008040201L, 0x0080402010080402L, 0x0000804020100804L, 0x0000008040201008L,
            0x0000000080402010L, 0x0000000000804020L, 0x0000000000008040L, 0x0000000000000000L,
            0x4020100804020100L, 0x8040201008040201L, 0x0080402010080402L, 0x0000804020100804L,
            0x0000008040201008L, 0x0000000080402010L, 0x0000000000804020L, 0x0000000000008040L,
            0x2010080402010000L, 0x4020100804020100L, 0x8040201008040201L, 0x0080402010080402L,
            0x0000804020100804L, 0x0000008040201008L, 0x0000000080402010L, 0x0000000000804020L,
            0x1008040201000000L, 0x2010080402010000L, 0x4020100804020100L, 0x8040201008040201L,
            0x0080402010080402L, 0x0000804020100804L, 0x0000008040201008L, 0x0000000080402010L,
            0x0804020100000000L, 0x1008040201000000L, 0x2010080402010000L, 0x4020100804020100L,
            0x8040201008040201L, 0x0080402010080402L, 0x0000804020100804L, 0x0000008040201008L,
            0x0402010000000000L, 0x0804020100000000L, 0x1008040201000000L, 0x2010080402010000L,
            0x4020100804020100L, 0x8040201008040201L, 0x0080402010080402L, 0x0000804020100804L,
            0x0201000000000000L, 0x0402010000000000L, 0x0804020100000000L, 0x1008040201000000L,
            0x2010080402010000L, 0x4020100804020100L, 0x8040201008040201L, 0x0080402010080402L,
            0x0000000000000000L, 0x0201000000000000L, 0x0402010000000000L, 0x0804020100000000L,
            0x1008040201000000L, 0x2010080402010000L, 0x4020100804020100L, 0x8040201008040201L,

    };
    public final static long[] BishopDiagonalMaskMoves_2 = {
            0x0000000000000000L, 0x0000000000000102L, 0x0000000000010204L, 0x0000000001020408L,
            0x0000000102040810L, 0x0000010204081020L, 0x0001020408102040L, 0x0102040810204080L,
            0x0000000000000102L, 0x0000000000010204L, 0x0000000001020408L, 0x0000000102040810L,
            0x0000010204081020L, 0x0001020408102040L, 0x0102040810204080L, 0x0204081020408000L,
            0x0000000000010204L, 0x0000000001020408L, 0x0000000102040810L, 0x0000010204081020L,
            0x0001020408102040L, 0x0102040810204080L, 0x0204081020408000L, 0x0408102040800000L,
            0x0000000001020408L, 0x0000000102040810L, 0x0000010204081020L, 0x0001020408102040L,
            0x0102040810204080L, 0x0204081020408000L, 0x0408102040800000L, 0x0810204080000000L,
            0x0000000102040810L, 0x0000010204081020L, 0x0001020408102040L, 0x0102040810204080L,
            0x0204081020408000L, 0x0408102040800000L, 0x0810204080000000L, 0x1020408000000000L,
            0x0000010204081020L, 0x0001020408102040L, 0x0102040810204080L, 0x0204081020408000L,
            0x0408102040800000L, 0x0810204080000000L, 0x1020408000000000L, 0x2040800000000000L,
            0x0001020408102040L, 0x0102040810204080L, 0x0204081020408000L, 0x0408102040800000L,
            0x0810204080000000L, 0x1020408000000000L, 0x2040800000000000L, 0x4080000000000000L,
            0x0102040810204080L, 0x0204081020408000L, 0x0408102040800000L, 0x0810204080000000L,
            0x1020408000000000L, 0x2040800000000000L, 0x4080000000000000L, 0x0000000000000000L,

    };

    public static long BishopPossibleMoves(int place, Game game) {

        boolean isPlayerPiece = game.isPlayerPiece(0x1L << place);
        long slider = 0x1L << place;
        long diagonal1;
        long diagonal2;

        diagonal1 = (((game.AllOccupiedPlaces & BishopDiagonalMaskMoves_1[place]) - (2 * slider)) ^
                Long.reverse(Long.reverse(game.AllOccupiedPlaces & BishopDiagonalMaskMoves_1[place]) - (2 * Long.reverse(slider))))
                & BishopDiagonalMaskMoves_1[place];

        diagonal2 = (((game.AllOccupiedPlaces & BishopDiagonalMaskMoves_2[place]) - (2 * slider)) ^
                Long.reverse(Long.reverse(game.AllOccupiedPlaces & BishopDiagonalMaskMoves_2[place]) - (2 * Long.reverse(slider))))
                & BishopDiagonalMaskMoves_2[place];

        return (diagonal1 | diagonal2) & (isPlayerPiece ? ~game.PlayerOccupiedPlaces : ~game.ComputerOccupiedPlaces);

    }


}
